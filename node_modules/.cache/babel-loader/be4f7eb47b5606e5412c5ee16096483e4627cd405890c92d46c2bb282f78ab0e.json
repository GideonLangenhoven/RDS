{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/RDS/src/components/gallery/Gallery.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Card from './Card';\nimport Modal from './Modal';\nimport './Gallery.css';\nimport { ModalContext } from '../../context/ModalContext'; // <-- Import the context\n\n// The galleryData array remains here (omitted for brevity)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst galleryData = [\n  // ... all your gallery data from the previous step\n];\nconst Gallery = () => {\n  _s();\n  const [expandedRowIndex, setExpandedRowIndex] = useState(null);\n  const [modalState, setModalState] = useState({\n    isOpen: false,\n    rowIndex: null,\n    cardIndex: null\n  });\n\n  // Get the setter function from our global context\n  const {\n    setIsModalOpen\n  } = useContext(ModalContext);\n  const handleRowClick = rowIndex => {\n    setExpandedRowIndex(prevIndex => prevIndex === rowIndex ? null : rowIndex);\n  };\n  const handleCollapseRow = e => {\n    e.stopPropagation();\n    setExpandedRowIndex(null);\n  };\n  const handleCardClick = (e, rowIndex, cardIndex) => {\n    if (expandedRowIndex === rowIndex) {\n      e.stopPropagation();\n      setModalState({\n        isOpen: true,\n        rowIndex,\n        cardIndex\n      });\n      setIsModalOpen(true); // <-- Tell the context the modal is open\n    }\n  };\n  const closeModal = () => {\n    setModalState({\n      isOpen: false,\n      rowIndex: null,\n      cardIndex: null\n    });\n    setIsModalOpen(false); // <-- Tell the context the modal is closed\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-grid\",\n        children: galleryData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-row ${expandedRowIndex === rowIndex ? 'is-expanded' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"card-stack\",\n            onClick: expandedRowIndex !== rowIndex ? () => handleRowClick(rowIndex) : undefined,\n            children: row.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(Card, {\n              card: card,\n              index: cardIndex,\n              isExpanded: expandedRowIndex === rowIndex,\n              onCardClick: e => handleCardClick(e, rowIndex, cardIndex),\n              onCollapse: handleCollapseRow,\n              isFirst: cardIndex === 0\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalState.isOpen,\n      onClose: closeModal,\n      galleryData: galleryData,\n      initialState: modalState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Gallery, \"hwa7Fy3PRxLMcYRdhb2xBw28gPk=\");\n_c = Gallery;\nexport default Gallerys;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useState","useContext","Card","Modal","ModalContext","jsxDEV","_jsxDEV","Fragment","_Fragment","galleryData","Gallery","_s","expandedRowIndex","setExpandedRowIndex","modalState","setModalState","isOpen","rowIndex","cardIndex","setIsModalOpen","handleRowClick","prevIndex","handleCollapseRow","e","stopPropagation","handleCardClick","closeModal","children","className","map","row","onClick","undefined","card","index","isExpanded","onCardClick","onCollapse","isFirst","id","fileName","_jsxFileName","lineNumber","columnNumber","onClose","initialState","_c","Gallerys","$RefreshReg$"],"sources":["/Users/user/Desktop/RDS/src/components/gallery/Gallery.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Card from './Card';\nimport Modal from './Modal';\nimport './Gallery.css';\nimport { ModalContext } from '../../context/ModalContext'; // <-- Import the context\n\n// The galleryData array remains here (omitted for brevity)\nconst galleryData = [\n  // ... all your gallery data from the previous step\n];\n\nconst Gallery = () => {\n  const [expandedRowIndex, setExpandedRowIndex] = useState(null);\n  const [modalState, setModalState] = useState({ isOpen: false, rowIndex: null, cardIndex: null });\n\n  // Get the setter function from our global context\n  const { setIsModalOpen } = useContext(ModalContext);\n\n  const handleRowClick = (rowIndex) => {\n    setExpandedRowIndex((prevIndex) => (prevIndex === rowIndex ? null : rowIndex));\n  };\n\n  const handleCollapseRow = (e) => {\n    e.stopPropagation();\n    setExpandedRowIndex(null);\n  };\n\n  const handleCardClick = (e, rowIndex, cardIndex) => {\n    if (expandedRowIndex === rowIndex) {\n      e.stopPropagation();\n      setModalState({ isOpen: true, rowIndex, cardIndex });\n      setIsModalOpen(true); // <-- Tell the context the modal is open\n    }\n  };\n\n  const closeModal = () => {\n    setModalState({ isOpen: false, rowIndex: null, cardIndex: null });\n    setIsModalOpen(false); // <-- Tell the context the modal is closed\n  };\n\n  return (\n    <>\n      <div className=\"gallery-wrapper\">\n        <div className=\"gallery-grid\">\n          {galleryData.map((row, rowIndex) => (\n            <div\n              key={rowIndex}\n              className={`card-row ${expandedRowIndex === rowIndex ? 'is-expanded' : ''}`}\n            >\n              <ul\n                className=\"card-stack\"\n                onClick={expandedRowIndex !== rowIndex ? () => handleRowClick(rowIndex) : undefined}\n              >\n                {row.map((card, cardIndex) => (\n                  <Card\n                    key={card.id}\n                    card={card}\n                    index={cardIndex}\n                    isExpanded={expandedRowIndex === rowIndex}\n                    onCardClick={(e) => handleCardClick(e, rowIndex, cardIndex)}\n                    onCollapse={handleCollapseRow}\n                    isFirst={cardIndex === 0}\n                  />\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Modal\n        isOpen={modalState.isOpen}\n        onClose={closeModal}\n        galleryData={galleryData}\n        initialState={modalState}\n      />\n    </>\n  );\n};\n\nexport default Gallerys;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}