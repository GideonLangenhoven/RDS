{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/RDS/src/components/GalleryModals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './Gallery.css'; // We'll use the same CSS file for modal styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryModals = ({\n  isOpen,\n  onClose,\n  images = [],\n  initialIndex = 0\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(initialIndex);\n\n  // When the modal opens or the initial image changes, reset the current index\n  useEffect(() => {\n    setCurrentIndex(initialIndex);\n  }, [initialIndex]);\n\n  // Memoized navigation functions\n  const goToNext = useCallback(() => {\n    if (images.length === 0) return;\n    setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n  }, [images.length]);\n  const goToPrev = useCallback(() => {\n    if (images.length === 0) return;\n    setCurrentIndex(prevIndex => (prevIndex - 1 + images.length) % images.length);\n  }, [images.length]);\n\n  // Keyboard navigation effect\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (!isOpen) return;\n      if (e.key === 'ArrowRight') goToNext();\n      if (e.key === 'ArrowLeft') goToPrev();\n      if (e.key === 'Escape') onClose();\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose, goToNext, goToPrev]);\n\n  // Early return if the modal should not be displayed\n  if (!isOpen || images.length === 0) {\n    return null;\n  }\n  const currentCard = images[currentIndex];\n  if (!currentCard) return null; // Safety check\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-btn\",\n        onClick: onClose,\n        title: \"Close (Esc)\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-nav-btn prev\",\n        onClick: goToPrev,\n        title: \"Previous (Left Arrow)\",\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentCard.imageUrl.replace('w=500', 'w=1200'),\n          alt: currentCard.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-title-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentCard.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-nav-btn next\",\n        onClick: goToNext,\n        title: \"Next (Right Arrow)\",\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GalleryModals, \"MuWxpi02PegwCXQnMR3a++X1g/k=\");\n_c = GalleryModals;\nexport default GalleryModals;\nvar _c;\n$RefreshReg$(_c, \"GalleryModals\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","GalleryModals","isOpen","onClose","images","initialIndex","_s","currentIndex","setCurrentIndex","goToNext","length","prevIndex","goToPrev","handleKeyDown","e","key","window","addEventListener","removeEventListener","currentCard","className","onClick","children","stopPropagation","title","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","replace","alt","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/RDS/src/components/GalleryModals.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './Gallery.css'; // We'll use the same CSS file for modal styles\n\nconst GalleryModals = ({ isOpen, onClose, images = [], initialIndex = 0 }) => {\n  const [currentIndex, setCurrentIndex] = useState(initialIndex);\n\n  // When the modal opens or the initial image changes, reset the current index\n  useEffect(() => {\n    setCurrentIndex(initialIndex);\n  }, [initialIndex]);\n\n  // Memoized navigation functions\n  const goToNext = useCallback(() => {\n    if (images.length === 0) return;\n    setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n  }, [images.length]);\n\n  const goToPrev = useCallback(() => {\n    if (images.length === 0) return;\n    setCurrentIndex(prevIndex => (prevIndex - 1 + images.length) % images.length);\n  }, [images.length]);\n\n  // Keyboard navigation effect\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (!isOpen) return;\n      if (e.key === 'ArrowRight') goToNext();\n      if (e.key === 'ArrowLeft') goToPrev();\n      if (e.key === 'Escape') onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose, goToNext, goToPrev]);\n\n  // Early return if the modal should not be displayed\n  if (!isOpen || images.length === 0) {\n    return null;\n  }\n\n  const currentCard = images[currentIndex];\n  if (!currentCard) return null; // Safety check\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"modal-close-btn\" onClick={onClose} title=\"Close (Esc)\">&times;</button>\n\n        <button className=\"modal-nav-btn prev\" onClick={goToPrev} title=\"Previous (Left Arrow)\">&#10094;</button>\n\n        <div className=\"modal-image-container\">\n          <img src={currentCard.imageUrl.replace('w=500', 'w=1200')} alt={currentCard.title} />\n          <div className=\"modal-title-overlay\">\n            <h2>{currentCard.title}</h2>\n          </div>\n        </div>\n\n        <button className=\"modal-nav-btn next\" onClick={goToNext} title=\"Next (Right Arrow)\">&#10095;</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GalleryModals;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}