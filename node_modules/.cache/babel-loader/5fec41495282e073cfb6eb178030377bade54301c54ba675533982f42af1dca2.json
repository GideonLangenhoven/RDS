{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/RDS/src/pages/Services.js\",\n  _s = $RefreshSig$();\n// src/pages/Services.js\nimport React, { useState, useEffect } from 'react';\nimport ServiceCard from '../components/ServiceCard';\nimport ServiceDetailModal from '../components/ServiceDetailModal';\nimport { services } from '../data/servicesData';\nimport '../styles/Services.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedService, setSelectedService] = useState(null);\n  const handleOpenModal = service => {\n    setSelectedService(service);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    // After the modal transition, clear the selected service\n    setTimeout(() => {\n      setSelectedService(null);\n    }, 400);\n  };\n  useEffect(() => {\n    if (isModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n  }, [isModalOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Our Event Planning Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"services-grid\",\n          children: services.map(service => /*#__PURE__*/_jsxDEV(ServiceCard, {\n            service: service,\n            onOpenModal: handleOpenModal,\n            isModalOpen: isModalOpen\n            // Let the card know if it's the one that opened the modal\n            ,\n            isActiveCard: (selectedService === null || selectedService === void 0 ? void 0 : selectedService.id) === service.id\n          }, service.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ServiceDetailModal, {\n      service: selectedService,\n      onClose: handleCloseModal,\n      isOpen: isModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Services, \"0UJxk94o7nm4U6rdFbnYe3zRj48=\");\n_c = Services;\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useState","useEffect","ServiceCard","ServiceDetailModal","services","jsxDEV","_jsxDEV","Fragment","_Fragment","Services","_s","isModalOpen","setIsModalOpen","selectedService","setSelectedService","handleOpenModal","service","handleCloseModal","setTimeout","document","body","classList","add","remove","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onOpenModal","isActiveCard","id","onClose","isOpen","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/RDS/src/pages/Services.js"],"sourcesContent":["// src/pages/Services.js\nimport React, { useState, useEffect } from 'react';\nimport ServiceCard from '../components/ServiceCard';\nimport ServiceDetailModal from '../components/ServiceDetailModal';\nimport { services } from '../data/servicesData';\nimport '../styles/Services.css';\n\nconst Services = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedService, setSelectedService] = useState(null);\n\n  const handleOpenModal = (service) => {\n    setSelectedService(service);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    // After the modal transition, clear the selected service\n    setTimeout(() => {\n        setSelectedService(null);\n    }, 400);\n  };\n  \n  useEffect(() => {\n    if (isModalOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n  }, [isModalOpen]);\n\n  return (\n    <>\n      <div className=\"page-container\">\n        <div className=\"page-content\">\n          <h1>Our Event Planning Services</h1>\n          <div className=\"services-grid\">\n            {services.map(service => (\n              <ServiceCard \n                key={service.id} \n                service={service} \n                onOpenModal={handleOpenModal} \n                isModalOpen={isModalOpen}\n                // Let the card know if it's the one that opened the modal\n                isActiveCard={selectedService?.id === service.id}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n      <ServiceDetailModal \n        service={selectedService} \n        onClose={handleCloseModal} \n        isOpen={isModalOpen}\n      />\n    </>\n  );\n};\n\nexport default Services;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,kBAAkB,MAAM,kCAAkC;AACjE,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMe,eAAe,GAAIC,OAAO,IAAK;IACnCF,kBAAkB,CAACE,OAAO,CAAC;IAC3BJ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,cAAc,CAAC,KAAK,CAAC;IACrB;IACAM,UAAU,CAAC,MAAM;MACbJ,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,IAAIU,WAAW,EAAE;MACfQ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,YAAY,CAAC;IAC9C;EACF,CAAC,EAAE,CAACZ,WAAW,CAAC,CAAC;EAEjB,oBACEL,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAKmB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BlB,OAAA;QAAKmB,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BlB,OAAA;UAAAkB,QAAA,EAAI;QAA2B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCvB,OAAA;UAAKmB,SAAS,EAAC,eAAe;UAAAD,QAAA,EAC3BpB,QAAQ,CAAC0B,GAAG,CAACd,OAAO,iBACnBV,OAAA,CAACJ,WAAW;YAEVc,OAAO,EAAEA,OAAQ;YACjBe,WAAW,EAAEhB,eAAgB;YAC7BJ,WAAW,EAAEA;YACb;YAAA;YACAqB,YAAY,EAAE,CAAAnB,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEoB,EAAE,MAAKjB,OAAO,CAACiB;UAAG,GAL5CjB,OAAO,CAACiB,EAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMhB,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNvB,OAAA,CAACH,kBAAkB;MACjBa,OAAO,EAAEH,eAAgB;MACzBqB,OAAO,EAAEjB,gBAAiB;MAC1BkB,MAAM,EAAExB;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACnB,EAAA,CAnDID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}