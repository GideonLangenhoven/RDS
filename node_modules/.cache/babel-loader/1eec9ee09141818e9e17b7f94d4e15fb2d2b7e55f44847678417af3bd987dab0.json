{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/RDS/src/components/GalleryModals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Gallery.css'; // Uses the same CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryModals = ({\n  isOpen,\n  onClose,\n  galleryData,\n  initialState\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(initialState.cardIndex);\n\n  // Update the index if the modal is re-opened with a different card\n  useEffect(() => {\n    setCurrentIndex(initialState.cardIndex);\n  }, [initialState.cardIndex]);\n  if (!isOpen || initialState.rowIndex === null) {\n    return null;\n  }\n  const currentRow = galleryData[initialState.rowIndex];\n  const currentCard = currentRow[currentIndex];\n  const goToNext = () => {\n    const nextIndex = (currentIndex + 1) % currentRow.length;\n    setCurrentIndex(nextIndex);\n  };\n  const goToPrev = () => {\n    const prevIndex = (currentIndex - 1 + currentRow.length) % currentRow.length;\n    setCurrentIndex(prevIndex);\n  };\n\n  // Keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'ArrowRight') goToNext();\n      if (e.key === 'ArrowLeft') goToPrev();\n      if (e.key === 'Escape') onClose();\n    };\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, currentIndex, onClose]); // Added onClose to dependency array\n\n  // This check prevents errors if the component tries to render before the state is ready\n  if (!currentCard) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-close-btn\",\n        onClick: onClose,\n        title: \"Close (Esc)\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-nav-btn prev\",\n        onClick: goToPrev,\n        title: \"Previous\",\n        children: \"\\u276E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentCard.imageUrl.replace('w=500', 'w=1200'),\n          alt: currentCard.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-title-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentCard.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-nav-btn next\",\n        onClick: goToNext,\n        title: \"Next\",\n        children: \"\\u276F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(GalleryModals, \"PdmkZm2U4HlL2hFZbJgS2eg9aCo=\");\n_c = GalleryModals;\nexport default GalleryModals;\nvar _c;\n$RefreshReg$(_c, \"GalleryModals\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GalleryModals","isOpen","onClose","galleryData","initialState","_s","currentIndex","setCurrentIndex","cardIndex","rowIndex","currentRow","currentCard","goToNext","nextIndex","length","goToPrev","prevIndex","handleKeyDown","e","key","window","addEventListener","removeEventListener","className","onClick","children","stopPropagation","title","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","replace","alt","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/RDS/src/components/GalleryModals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Gallery.css'; // Uses the same CSS file\n\nconst GalleryModals = ({ isOpen, onClose, galleryData, initialState }) => {\n  const [currentIndex, setCurrentIndex] = useState(initialState.cardIndex);\n\n  // Update the index if the modal is re-opened with a different card\n  useEffect(() => {\n    setCurrentIndex(initialState.cardIndex);\n  }, [initialState.cardIndex]);\n\n  if (!isOpen || initialState.rowIndex === null) {\n    return null;\n  }\n\n  const currentRow = galleryData[initialState.rowIndex];\n  const currentCard = currentRow[currentIndex];\n\n  const goToNext = () => {\n    const nextIndex = (currentIndex + 1) % currentRow.length;\n    setCurrentIndex(nextIndex);\n  };\n\n  const goToPrev = () => {\n    const prevIndex = (currentIndex - 1 + currentRow.length) % currentRow.length;\n    setCurrentIndex(prevIndex);\n  };\n\n  // Keyboard navigation\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'ArrowRight') goToNext();\n      if (e.key === 'ArrowLeft') goToPrev();\n      if (e.key === 'Escape') onClose();\n    };\n\n    if (isOpen) {\n      window.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, currentIndex, onClose]); // Added onClose to dependency array\n\n  // This check prevents errors if the component tries to render before the state is ready\n  if (!currentCard) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <button className=\"modal-close-btn\" onClick={onClose} title=\"Close (Esc)\">&times;</button>\n\n        <button className=\"modal-nav-btn prev\" onClick={goToPrev} title=\"Previous\">&#10094;</button>\n\n        <div className=\"modal-image-container\">\n          {/* Using a higher resolution image for the modal */}\n          <img src={currentCard.imageUrl.replace('w=500', 'w=1200')} alt={currentCard.title} />\n          <div className=\"modal-title-overlay\">\n            <h2>{currentCard.title}</h2>\n          </div>\n        </div>\n\n        <button className=\"modal-nav-btn next\" onClick={goToNext} title=\"Next\">&#10095;</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GalleryModals;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}